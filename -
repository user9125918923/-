local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera
local maxDistance = 1000

_G.Settings = _G.Settings or {
	ShowNames = true,
	ShowDistance = true
}

local toolNames = {
	RedOakStake = "RedOak",
	WhiteOakStake = "WhiteOak",
	QetsiyahCure = "QetCure",
	TheCure = "Cure",
	IndestructibleWhiteOakStake = "Indestructible",
	MikaelWhiteOakStake = "MikaelStake"
}

local function createText(size, color)
	local text = Drawing.new("Text")
	text.Size = size
	text.Center = true
	text.Outline = false
	text.Color = color
	text.Visible = false
	return text
end

local function getBackpackTools(player)
	local backpack = player:FindFirstChildOfClass("Backpack")
	if not backpack then return nil end
	local foundTools, added = {}, {}
	for _, tool in ipairs(backpack:GetChildren()) do
		local mapped = toolNames[tool.Name]
		if mapped and not added[mapped] then
			table.insert(foundTools, mapped)
			added[mapped] = true
		end
	end
	return #foundTools > 0 and table.concat(foundTools, ", ") or nil
end

local function createHighlight(obj)
	local h = Instance.new("Highlight")
	h.FillColor = Color3.fromRGB(170, 0, 255)
	h.FillTransparency = 0.3
	h.OutlineTransparency = 1
	h.Adornee = obj
	h.Parent = obj
	return h
end

local espElements = {}

local function hideElements(elements)
	if elements then
		if elements.name then elements.name.Visible = false end
		if elements.charName then elements.charName.Visible = false end
		if elements.distance then elements.distance.Visible = false end
		if elements.tools then elements.tools.Visible = false end
	end
end

local function updateESP()
	local function convertStudsToMeters(studs)
		return studs * 0.28
	end

	for _, player in ipairs(Players:GetPlayers()) do
		if player ~= LocalPlayer then
			local char = player.Character
			local root = char and char:FindFirstChild("HumanoidRootPart")
			local hum = char and char:FindFirstChildOfClass("Humanoid")
			if char and root and hum and hum.Health > 0 then
				local dist = convertStudsToMeters((LocalPlayer.Character.HumanoidRootPart.Position - root.Position).Magnitude)
				if dist < maxDistance then
					local screenPos, onScreen = Camera:WorldToViewportPoint(root.Position)
					if onScreen then
						if not espElements[player] then
							espElements[player] = {
								highlight = createHighlight(char),
								name = createText(14, Color3.fromRGB(255, 255, 255)),
								charName = createText(14, Color3.fromRGB(180, 180, 180)),
								distance = createText(12, Color3.fromRGB(255, 255, 255)),
								tools = createText(12, Color3.fromRGB(150, 150, 150))
							}
						elseif espElements[player].highlight.Adornee ~= char then
							espElements[player].highlight.Adornee = char
						end

						local e = espElements[player]
						local offsetY = screenPos.Y - 20

						local charName = player:GetAttribute("CharacterName")
						if charName then
							e.charName.Text = charName
							e.charName.Position = Vector2.new(screenPos.X, offsetY - 14)
							e.charName.Visible = true
						else
							e.charName.Visible = false
						end

						-- Set name color to green if the player is a friend, otherwise white
						local nameColor = (LocalPlayer:IsFriendsWith(player.UserId)) and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 255, 255)

						e.name.Text = player.Name
						e.name.Position = Vector2.new(screenPos.X, offsetY)
						e.name.Color = nameColor
						e.name.Visible = true

						if _G.Settings.ShowDistance then
							e.distance.Text = string.format("%.1f meters", dist)
							e.distance.Position = Vector2.new(screenPos.X, screenPos.Y + 2)
							e.distance.Visible = true
						else
							e.distance.Visible = false
						end

						local tools = getBackpackTools(player)
						if tools then
							e.tools.Text = tools
							e.tools.Position = Vector2.new(screenPos.X, screenPos.Y + 18)
							e.tools.Visible = true
						else
							e.tools.Visible = false
						end
					else
						hideElements(espElements[player])
					end
				else
					hideElements(espElements[player])
				end
			else
				hideElements(espElements[player])
			end
		end
	end

	local cloneFolder = workspace:FindFirstChild("playerCloneFolder")
	if cloneFolder then
		for _, object in ipairs(cloneFolder:GetChildren()) do
			if object:IsA("Model") and object:FindFirstChild("HumanoidRootPart") then
				local part = object:FindFirstChild("HumanoidRootPart")
				local dist = convertStudsToMeters((LocalPlayer.Character.HumanoidRootPart.Position - part.Position).Magnitude)
				if dist < maxDistance then
					local screenPos, onScreen = Camera:WorldToViewportPoint(part.Position)
					if onScreen then
						if not espElements[object] then
							espElements[object] = {
								highlight = createHighlight(object),
								name = createText(14, Color3.fromRGB(255, 255, 255)),
								distance = createText(12, Color3.fromRGB(255, 255, 255))
							}
							object.AncestryChanged:Connect(function(_, parent)
								if not parent and espElements[object] then
									espElements[object].name:Remove()
									espElements[object].distance:Remove()
									espElements[object] = nil
								end
							end)
						elseif espElements[object].highlight.Adornee ~= object then
							espElements[object].highlight.Adornee = object
						end

						local e = espElements[object]
						e.name.Text = object.Name .. " (Dead)"
						e.name.Position = Vector2.new(screenPos.X, screenPos.Y - 20)
						e.name.Visible = true

						if _G.Settings.ShowDistance then
							e.distance.Text = string.format("%.1f meters", dist)
							e.distance.Position = Vector2.new(screenPos.X, screenPos.Y + 2)
							e.distance.Visible = true
						else
							e.distance.Visible = false
						end
					else
						hideElements(espElements[object])
					end
				else
					hideElements(espElements[object])
				end
			else
				hideElements(espElements[object])
			end
		end
	end
end

RunService.RenderStepped:Connect(updateESP)

Players.PlayerRemoving:Connect(function(player)
	if espElements[player] then
		if espElements[player].highlight then espElements[player].highlight:Destroy() end
		if espElements[player].name then espElements[player].name:Remove() end
		if espElements[player].charName then espElements[player].charName:Remove() end
		if espElements[player].distance then espElements[player].distance:Remove() end
		if espElements[player].tools then espElements[player].tools:Remove() end
		espElements[player] = nil
	end
end)

if workspace:FindFirstChild("playerCloneFolder") then
	workspace.playerCloneFolder.ChildAdded:Connect(function(child)
		if child:IsA("Model") and child:FindFirstChild("HumanoidRootPart") then
			updateESP()
		end
	end)
end

local player, camera = game.Players.LocalPlayer, workspace.CurrentCamera
local espObjects = {}

local function createESP(part)
    local mainPart = part:FindFirstChild("Main")
    if not mainPart then return end

    local label = Instance.new("TextLabel", Instance.new("BillboardGui", mainPart))
    label.Size = UDim2.new(1, 0, 1, 0)
    label.BackgroundTransparency, label.TextColor3 = 1, Color3.fromRGB(169, 169, 169)
    label.TextScaled, label.TextStrokeTransparency, label.TextSize = true, 0.8, 10
    label.Text = "White Oak Stake"
    label.Parent.Size = UDim2.new(0, 100, 0, 25)
    label.Parent.Adornee, label.Parent.AlwaysOnTop, label.Parent.StudsOffset = mainPart, true, Vector3.new(0, 5, 0)

    table.insert(espObjects, {mainPart = mainPart, label = label, billboardGui = label.Parent})
end

game:GetService("RunService").RenderStepped:Connect(function()
    for _, part in ipairs(workspace:GetChildren()) do
        if part.Name == "IndestructibleWhiteOakStake" and part:FindFirstChild("Main") then
            local exists = false
            for _, esp in ipairs(espObjects) do
                if esp.mainPart == part.Main then
                    exists = true
                    break
                end
            end
            if not exists then createESP(part) end
        end
    end

    for _, esp in ipairs(espObjects) do
        local distance = (camera.CFrame.Position - esp.mainPart.Position).Magnitude
        esp.label.Text = "White Oak Stake\n" .. math.round(distance) .. " studs"
        esp.billboardGui.Enabled = camera:WorldToViewportPoint(esp.mainPart.Position).Z > 0
    end
end)

for _, v in ipairs(game:GetService("Workspace"):GetDescendants()) do
    if v.ClassName == "ProximityPrompt" then v.HoldDuration = 0 end
end

local tomb = game.Workspace:WaitForChild("Interactables"):WaitForChild("SilasTomb")

while true do
    local tunnelDoor = tomb:FindFirstChild("TunnelDoor")
    if tunnelDoor then
        tunnelDoor:Destroy()
        break
    end
    task.wait(1)
end

local targetSize1 = Vector3.new(73.965, 1, 12.874)
local targetSize2 = Vector3.new(0.124, 6.944, 37.45)

local function isMatch1(size)
    return (size - targetSize1).Magnitude < 0.05
end

local function isMatch2(size)
    return math.abs(size.X - targetSize2.X) < 0.01 and math.abs(size.Y - targetSize2.Y) < 0.01 and math.abs(size.Z - targetSize2.Z) < 0.01
end

task.spawn(function()
    while true do
        local b = workspace:FindFirstChild("Buildings")
        local estate = b and b:FindFirstChild("MikaelsonEstate")
        if estate then
            local found = false
            for _, p in pairs(estate:GetDescendants()) do
                if p:IsA("BasePart") and isMatch1(p.Size) then
                    p:Destroy()
                    found = true
                end
            end
            if found then break end
        end
        task.wait(1)
    end
end)

task.spawn(function()
    while true do
        local b = workspace:FindFirstChild("Buildings")
        local garage = b and b:FindFirstChild("Garage")
        if garage then
            local found = false
            for _, p in ipairs(garage:GetDescendants()) do
                if p:IsA("BasePart") and isMatch2(p.Size) then
                    p:Destroy()
                    found = true
                end
            end
            if found then break end
        end
        task.wait(1)
    end
end)

local stunPlayerPath = game.ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("GameServices"):WaitForChild("ToClient"):WaitForChild("StunPlayer")
local enhancedMovementService = game.ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("EnhancedMovementService")

local function deleteStunPlayer()
    if stunPlayerPath then
        stunPlayerPath:Destroy()
    end
end

local function deleteEnhancedMovementService()
    if enhancedMovementService then
        enhancedMovementService:Destroy()
    end
end

deleteStunPlayer()
deleteEnhancedMovementService()

game.ReplicatedStorage.Remotes.GameServices.ToClient.ChildAdded:Connect(function(child)
    if child.Name == "StunPlayer" then
        child:Destroy()
    end
end)

local player = game.Players.LocalPlayer
local screenUtils = player:WaitForChild("PlayerGui"):WaitForChild("ScreenUtils")
local children = screenUtils:GetChildren()
if #children >= 5 then
    children[3]:Destroy()
    children[4]:Destroy()
    children[5]:Destroy()
end
game.Players.LocalPlayer.CameraMaxZoomDistance = math.huge
game.Players.LocalPlayer.CameraMinZoomDistance = 0
if not game:IsLoaded() then game.Loaded:Wait() end
local PopperClient = game.Players.LocalPlayer:WaitForChild("PlayerScripts"):WaitForChild("PlayerModule"):WaitForChild("CameraModule"):WaitForChild("ZoomController"):WaitForChild("Popper")
for _, v in next, getgc() do
    if getfenv(v).script == PopperClient and typeof(v) == "function" then
        for i2, v2 in next, debug.getconstants(v) do
            if tonumber(v2) == 0.25 then debug.setconstant(v, i2, 0) end
            if tonumber(v2) == 0 then debug.setconstant(v, i2, 0.25) end
        end
    end
end
spawn(function()
    while true do
        wait(1)
        game.Players.LocalPlayer.CameraMaxZoomDistance = math.huge
        game.Players.LocalPlayer.CameraMinZoomDistance = 0
    end
end)

local function isSizeMatch(size)
    return math.abs(size.X - 0.124) < 0.01 and math.abs(size.Y - 6.944) < 0.01 and math.abs(size.Z - 37.45) < 0.01
end
